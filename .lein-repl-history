(-main)
(ns msgbot.service)
(send-text-message 977874788969966  "hi")
(use :reload-all 'msgbot.service)
(defn send-text-message [sender text]
  (let [post-url (str "https://graph.facebook.com/v2.6/me/messages")
        json-params (get-json-string {:json { :recipient {:id sender} :message {:text text}}})]
    (client/post post-url {:query-params {"access_token" page-token}
                            :body json-params :content-type :json :accept :json})))
(send-text-message 977874788969966  "hi")
(get-json-string {:json { :recipient {:id 977874788969966} :message {:text 1}}})
(client/post (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token) {:debug true :body (get-json-string {:json { :recipient {:id 977874788969966} :message {:text 1}}}) :content-type :json :accept :json})
(client/post (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token) {:debug true :body (get-json-string {:json { :recipient {:id 977874788969966} :message {:text 1}}}) })
(client/post (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token) {:debug true :body (get-json-string  { :recipient {:id 977874788969966} :message {:text 1}}) :content-type :json})
(defn send-text-message [sender text]
  (let [post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token)
        json-params (get-json-string { :recipient {:id sender} :message {:text text}})]
    (client/post post-url {:body json-params :content-type :json :accept :json})))
(client/post (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token) {:body (get-json-string  { :recipient {:id 977874788969966} :message {:text 1}}) :content-type :json})
(defn send-text-message [sender text]
  (let [post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token)
        json-params (get-json-string {:recipient {:id sender} :message {:text text}})]
    (client/post post-url {:body json-params :content-type :json})))
(send-text-message 977874788969966 hi)
(send-text-message 977874788969966 "hi")
(receive-msg {:json-params {:object page, :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid mid.1460823010339:b16edc361432313200, :seq 6, :text hi}}]}]}})
(receive-msg {:json-params { :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid mid.1460823010339:b16edc361432313200, :seq 6, :text hi}}]}]}})
(receive-msg {:json-params { :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid "mid.1460823010339:b16edc361432313200", :seq 6, :text hi}}]}]}})
(receive-msg {:json-params { :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid "mid.1460823010339:b16edc361432313200", :seq 6, :text "hi"}}]}]}})
(def  message-event-handler  (fn [m] (let [sender (:id (:sender m))
                                             message (:message m)
                                             text (:text message)]
                                         (if (and message text)
                                           (send-text-message sender (str "Text received, echo: " text))))))
(def params {:json-params { :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid "mid.1460823010339:b16edc361432313200", :seq 6, :text "hi"}}]}]}})
(map message-event-handler (:messaging (first (:entry params))))
(:messaging (first (:entry params)))
 (first (:entry params))
params
(def params { :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid "mid.1460823010339:b16edc361432313200", :seq 6, :text "hi"}}]}]})
(map message-event-handler (:messaging (first (:entry params))))
(-main)
(use :reload-all 'msgbot.service)
(-main)
(ns msgbot.service)
(json-->clojure { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } })
(get-json-string { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } })
(clojure.walk/keywordize-keys { "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
(-main)
'
(ns msgbot.service)
(send-generic-message 977874788969966)
(= "generic" "generic")
(== "generic" "generic")
(send-generic-message 977874788969966)
(ns msgbot.service)
(send-generic-message 977874788969966)
(send-text-message 977874788969966 "w")
(defn send-generic-message [sender]
  (send-message sender {:attachment {:type "template"
                                     :payload {:template_type "generic"
                                               :elements [{:title "First card" :subtitle "Element #1 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/rift.png"
                                                           :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"}
                                                                     {:type "postback" :title "Postback"
                                                                      :payload "Payload for first element in a generic bubble"}]}
                                                          {:title "Second card" :subtitle "Element #2 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/gearvr.png"
                                                           :buttons [{:type "postback" :title "Postback"
                                                                      :payload "Payload for second element in a generic bubble"}]}]}}}))
(send-generic-message 977874788969966)
(def params {:attachment {:type "template"
                                     :payload {:template_type "generic"
                                               :elements [{:title "First card" :subtitle "Element #1 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/rift.png"
                                                           :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"}
                                                                     {:type "postback" :title "Postback"
                                                                      :payload "Payload for first element in a generic bubble"}]}
                                                          {:title "Second card" :subtitle "Element #2 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/gearvr.png"
                                                           :buttons [{:type "postback" :title "Postback"
                                                                      :payload "Payload for second element in a generic bubble"}]}]}}})
(def json-params (get-json-string {:recipient {:id sender} :message params}))
(def json-params (get-json-string {:recipient {:id 977874788969966} :message params}))
json-params
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(client/post post-url {:body json-params :content-type :json :debug true}) 
(-main)
(server/servlet-destroy @servlet)
(-main)
(client/post post-url {:body json-params :content-type :json :debug true}) 
(-main)
(ns msgbot.service)
(send-generic-message 977874788969966)
(def params { "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
(def json-params (get-json-string {:recipient {:id 977874788969966} :message params}))
(send-generic-message 977874788969966)
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(client/post post-url {:body json-params :content-type :json :accept :json})
(client/post post-url {:body json-params :content-type :json :debug true})
json-params
(client/post post-url {:body json-params :content-type :json :debug true :decode-body-headers true })
(client/post post-url {:body json-params :content-type :json :decode-body-headers true })
params
(client/post post-url {:body {:json params} :content-type :json :decode-body-headers true })
(client/post post-url {:body {"json" : params} :content-type :json :decode-body-headers true })
(client/post post-url {:body {"json"  params} :content-type :json :decode-body-headers true })
params
(def key-params (clojure.walk/keywordize-keys params))
(client/post post-url {:body {:json  key-params} :content-type :json :decode-body-headers true })
json-params
(client/post post-url {:body {:json  key-params} :content-type :json :decode-body true })
(client/post post-url {:body json-params :content-type :json :decode-body true })
(client/post post-url {:body json-params :content-type :json :debug-body true })
(client/post post-url {:body json-params :content-type :json :debug true })
json-params
      (send-message sender {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}})   
(send-message 977874788969966 {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}})   
(client/post post-url {:body json-params :content-type :json :debug-body true })
(client/post post-url {:body json-params :content-type :json :debug true })
json-params
params
(def json-params (get-json-string {:json {:recipient {:id 977874788969966} :message params}}))
(client/post post-url {:body json-params :content-type :json :debug-body true })
json-params
(client/post post-url {:body json-params :content-type :json :debug-body true :accept :json})
(-main)
(:require [org.httpkit.client :as http])
(use :reload-all 'org.httpkit.client)
(request {:url "https://graph.facebook.com/v2.6/me/messages" :query-params {:access_token msgbot.service/page-token} :body (msgbot.service/get-json-string {:message {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}} :recipient {:id 977874788969966}})})
(request {:url "https://graph.facebook.com/v2.6/me/messages" :query-params {:access_token msgbot.service/page-token} :body (msgbot.service/get-json-string {:message {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}} :recipient {:id 977874788969966}}) :content-type :json})
(request {:url "https://graph.facebook.com/v2.6/me/messages" :query-params {:access_token msgbot.service/page-token} :body (msgbot.service/get-json-string {:message {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}} :recipient {:id 977874788969966}}) :content-type :json :method :post})
(use :reload-all 'clojure.data.json )
(-main)
(use :reload-all 'clojure.data.json )
(use :reload-all 'clojure.data.json :only encode)
(require 'clojure.data.json :as json)
(require 'clojure.data.json)
(require 'clojure.data.json :refer :all)
(-main)
(use :reload-all 'clojure.data.json )
(ns msgbot.service
)
(use :reload-all 'clojure.data.json )
(clojure.data.json/json-str {:id 1})
(clojure.data.json/JSONWriter {:id 1})
(clojure.data.json/write {:id 1})
(clojure.data.json/write-str {:id 1})
(docs clojure.data.json/write-str)
(doc clojure.data.json/write-str)
(clojure.repl/doc clojure.data.json/write-str)
(clojure.repl/doc clojure.data.json/write)
(parse-string "{\"id\":1}")
(cheshire.core/encode {:id 1})
(cheshire.core/encode {:attachment {:type "template")
                                     :payload {:template_type "generic"
                                               :elements [{:title "First card" :subtitle "Element #1 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/rift.png"
                                                           :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"}
                                                                     {:type "postback" :title "Postback"
                                                                      :payload "Payload for first element in a generic bubble"}]}
                                                          {:title "Second card" :subtitle "Element #2 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/gearvr.png"
                                                           :buttons [{:type "postback" :title "Postback"
                                                                      :payload "Payload for second element in a generic bubble"}]}]}}}
(def params {:attachment {:type "template"
                                     :payload {:template_type "generic"
                                               :elements [{:title "First card" :subtitle "Element #1 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/rift.png"
                                                           :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"}
                                                                     {:type "postback" :title "Postback"
                                                                      :payload "Payload for first element in a generic bubble"}]}
                                                          {:title "Second card" :subtitle "Element #2 of an hscroll"
                                                           :image_url "http//messengerdemo.parseapp.com/img/gearvr.png"
                                                           :buttons [{:type "postback" :title "Postback"
                                                                      :payload "Payload for second element in a generic bubble"}]}]}}})
(cheshire.core/encode params)
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(def json-params (get-json-string {:json {:recipient {:id 977874788969966} :message params}}))
(client/post post-url {:body json-params })
(def json-params (get-json-string {:recipient {:id 977874788969966} :message params}))
(client/post post-url {:body json-params })
parms
params
(client/post post-url {:body json-params :headers {:content-type :json})
(client/post post-url {:body json-params :headers {:content-type :json}})
(client/post post-url {:body json-params :headers {:content-type :json} :as :sjon})
(client/post post-url {:body json-params :headers {:content-type :json} :as :json})
(client/post post-url {:body json-params :headers {:content-type :json} :as :json-string-keys})
(client/post post-url {:body json-params :headers {"content-type" "application/json"} :as :json-string-keys})
(generate-string params)
(client/post post-url {:body json-params :body-encoding :json})
(client/post post-url {:body json-params :body-encoding "string")
(client/post post-url {:body json-params :body-encoding "string"})
(clojure.repl/doc generate-string)
(clojure.repl/doc cheshire.core/encode)
(clojure.repl/doc cheshire.core/encode-stream)
(clojure.repl/doc cheshire.core/generate-str)
(clojure.repl/doc cheshire.core/generate-stream)
(clojure.repl/doc cheshire.core/*generator*)
(cheshire.core/*generator*)
cheshire.core/*generator*
json-params
(def t "{\"recipient\":{\"id\":977874788969966},\"message\": ""})
(def t "{\"recipient\":{\"id\":977874788969966},\"message\": {}})
(def t "{\"recipient\":{\"id\":977874788969966},\"message": {}})
(def t "{\"recipient\":{\"id\":977874788969966},\"message": {}}")
(def t "{\"recipient\":{\"id\":977874788969966},\"message": \"\"}")
(def t "{\"recipient\":{\"id\":977874788969966},\"message": \"\"}}")
(def t "{\"recipient\":{\"id\":977874788969966},\"message\": {}}")
t
(def t "{\"recipient\":{\"id\":977874788969966},\"message\": { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }}")
(def t "{\"recipient\":{\"id\":977874788969966},\"message\": { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }}}")
(def t "{\"recipient\":{\"id\":977874788969966},\"message\": \"{ "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }\"}")
(def t1 "{ "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }")
(str { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } })
(generate-string { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } })
(parse-string-string { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } })
(def t1 '{ "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } })
(def t1 (quote { "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }))
^{ "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }
`{ "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }
'{ "attachment": { "type": "template", "payload": { "template_type": "generic", "elements": [{ "title": "First card", "subtitle": "Element #1 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/rift.png", "buttons": [{ "type": "web_url", "url": "https://www.messenger.com/", "title": "Web url" }, { "type": "postback", "title": "Postback", "payload": "Payload for first element in a generic bubble", }], },{ "title": "Second card", "subtitle": "Element #2 of an hscroll", "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png", "buttons": [{ "type": "postback", "title": "Postback", "payload": "Payload for second element in a generic bubble", }], }] } } }
'{ "attachment": { "type": "template" "payload": { "template_type": "generic" "elements": [{ "title": "First card" "subtitle": "Element #1 of an hscroll" "image_url": "http://messengerdemo.parseapp.com/img/rift.png" "buttons": [{ "type": "web_url" "url": "https://www.messenger.com/" "title": "Web url" } { "type": "postback" "title": "Postback" "payload": "Payload for first element in a generic bubble" }] }{ "title": "Second card" "subtitle": "Element #2 of an hscroll" "image_url": "http://messengerdemo.parseapp.com/img/gearvr.png" "buttons": [{ "type": "postback" "title": "Postback" "payload": "Payload for second element in a generic bubble" }] }] } } }
'{ "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } }
(def test '{ "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
(def json-params (get-json-string {:recipient {:id 977874788969966} :message t1}))
t1
test
(def json-params (get-json-string {:recipient {:id 977874788969966} :message test}))
json-params
(def test ''{ "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
test
(def json-params (get-json-string {:recipient {:id 977874788969966} :message test}))
json-
json-params
(parse-string json-params)
"{\"recipient\":{\"id\":977874788969966},\"message\" \"\"}
"{\"recipient\":{\"id\":977874788969966},\"message\" \"\"}"
"{\"recipient\":{\"id\":977874788969966},\"message\" \"Json.parse("{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}}")\"}"
"{\"recipient\":{\"id\":977874788969966},\"message\" \"Json.parse(\"{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}}\")\"}"
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\" \"Json.parse(\"{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}}\")\"}")
json-params
(client/post post-url {:body json-params :body-encoding "string")
(client/post post-url {:body json-params})
(client/post post-url {:body json-params :conect-type :json})
post-url
(client/post post-url {:body json-params :content-type :json})
json-params
params
(def json-params (get-json-string {:recipient {:id 977874788969966} :message JSON.parse(get-json-string params)}))
(def json-params (get-json-string {:recipient {:id 977874788969966} :message "JSON.parse(get-json-string params)"}))
json-params
(def json-params (get-json-string {:recipient {:id 977874788969966} :message "JSON.parse`(get-json-string params)"}))
json-params
(def json-params (get-json-string {:recipient {:id 977874788969966} :message "JSON.parse`@(get-json-string params)"}))
json-params
(def json-params (get-json-string {:recipient {:id 977874788969966} :message "JSON.parse(eval(get-json-string params))"}))
json-params
(def json-params (get-json-string {:recipient {:id 977874788969966} :message (str "JSON.parse"(get-json-string params))"}))
(def json-params (get-json-string {:recipient {:id 977874788969966} :message (str "JSON.parse"(get-json-string params))}))
json-params
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\" \"Json.parse('{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}})\"}")
json-params
(client/post post-url {:body json-params :content-type :json})
(client/post post-url {:body json-params :content-type :json :debud true})
(client/post post-url {:body json-params :content-type :json :debug true})
json-params
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\" "\"Json.parse('{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}})\"}")
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\" :\"Json.parse('{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}})\"}")
json-params
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\": "\"Json.parse('{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}})\"}")
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\" : \"Json.parse('{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}})\"}")
json-params
(client/post post-url {:body json-params :content-type :json :debud true})
(client/post post-url {:body json-params :content-type :json :debug true})
(def json-params "{\"recipient\":{\"id\":977874788969966},\"message\" : \"Json.parse(\"{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}}\")\"}")
(client/post post-url {:body json-params :content-type :json :debug true})
(def json-params (get-json-string {:recipient {:id 977874788969966} :message (get-json-string params)}))
(ns msgbot.service)
(def json-params (get-json-string {:recipient {:id 977874788969966} :message (get-json-string params)}))
(def params { "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
(def json-params (get-json-string {:recipient {:id 977874788969966} :message (get-json-string params)}))
json-params
(use :reload-all 'clj-json.core)
(use :reload 'clj-json.core)
(use 'clj-json.core)
(use '[clj-json.core :only [generate-string]])
(refer 'cheshire.core :exclude [generate-string parse-string])
(refer 'cheshire.core :exclude :all)
(refer 'cheshire.core :exclude [generate-string parse-string parsed-seq])
(remove-ns 'cheshire.core)
(use 'clj-json.core)
(remove-ns '#cheshire.core)
(remove-ns 'clj-json.core)
(use 'clj-json.core)
(use 'clj-json.core :reload)
(ms msgbot.server)
(ns msgbot.server)
(use 'clj-json.core :reload)
(def params { "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
(def json-params (generate-string {:recipient {:id 977874788969966} :message params}))
json-params
(ns msgbot.service)
(client/post post-url {:body "{\"recipient\":{\"id\":977874788969966},\"message\":{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}}}" :content-type :json })
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(client/post post-url {:body "{\"recipient\":{\"id\":977874788969966},\"message\":{\"attachment\":{\"type\":\"template\",\"payload\":{\"template_type\":\"generic\",\"elements\":[{\"title\":\"First card\",\"subtitle\":\"Element #1 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/rift.png\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"https//www.messenger.com/\",\"title\":\"Web url\"},{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for first element in a generic bubble\"}]},{\"title\":\"Second card\",\"subtitle\":\"Element #2 of an hscroll\",\"image_url\":\"http//messengerdemo.parseapp.com/img/gearvr.png\",\"buttons\":[{\"type\":\"postback\",\"title\":\"Postback\",\"payload\":\"Payload for second element in a generic bubble\"}]}]}}}}" :content-type :json })
(-main)
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(ns msgbot.service)
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(use :reload 'cljs-http.client)
(use :reload-all 'cljs-http.client)
(use :reload-all 'cljs_http.client)
(ns example.core
  (:require-macros [cljs.core.async.macros :refer [go]])
  (:require [cljs-http.client :as http]
            [cljs.core.async :refer [<!]]))
(:require [cljs-http.client :as http])
(use :reload-all 'cljs_http.client.lcjs)
(use :reload-all 'cljs_http.client.cljs)
(ns msgbot.service)
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="page-token))
(use :reload-all 'cljs_http.client)
(use :reload-all 'clj-http.client)
(post post-url {:json-params {:recipient {:id :977874788969966} :message {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}}}})
(post post-url {:body {:json-params {:recipient {:id :977874788969966} :message {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}}}}})
(post post-url {:body "{:json-params {:recipient {:id :977874788969966} :message {:attachment {:type "template" :payload {:template_type "generic" :elements [{:title "First card" :subtitle "Element #1 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/rift.png" :buttons [{:type "web_url" :url "https//www.messenger.com/" :title "Web url"} {:type "postback" :title "Postback" :payload "Payload for first element in a generic bubble"}]} {:title "Second card" :subtitle "Element #2 of an hscroll" :image_url "http//messengerdemo.parseapp.com/img/gearvr.png" :buttons [{:type "postback" :title "Postback" :payload "Payload for second element in a generic bubble"}]}]}}}}}"})
(use :reload-all 'org.httpkit.client)
(ns msgbot.server)
(use :reload-all 'org.httpkit.client)
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="msgbot.service/page-token))
(use :reload-all 'clojure.data.json)
(remove-method #'clojure.pprint/pprint)
(remove-method 'clojure.pprint/pprint)
(remove-method 'clojure.pprint pprint)
(clojure.repl/doc 'remove-method)
(clojure.repl/doc remove-method)
(remove-ns 'clojure.pprint)
(use :reload-all 'clojure.data.json)
(remove-method #'clojure.pprint/pprint {})
(use :reload-all 'clojure.pprint.PrettyFlush)
(use :reload-all 'clojure.pprint)
(use :reload-all 'clojure.data.json :exclude [pprint])
(use  '[clojure.data.json :exclude [pprint]])
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="msgbot.service/page-token))
(use :reload-all 'org.httpkit.client)
(clojure.data.json/encode {:id 1}
)
(use :reload-all 'clojure.data.json)
(clojure.repl/doc use)
(use :reload-all 'clojure.data.json :exclude 'pprint)
(use :reload-all 'clojure.data.json :exclude [pprint])
(use :reload-all 'clojure.data.json :only encode)
(use :reload-all 'clojure.data.json :only (encode))
(use :reload-all 'clojure.data.json :only '(encode))
(clojure.data.json/write-json {:id 1})
(clojure.data.json/JSONWriter {:id 1})
(clojure.data.json/json-str {:id 1})
(clojure.data.json/-write {:id 1})
(ns msgbot.service)
(def json-params (generate-string {:recipient {:id 977874788969966} :message params}))
(def json-params (generate-string {:recipient {:id 977874788969966} :message {:id 1}))
(def json-params (generate-string {:recipient {:id 977874788969966} :message {:id 1}}))
(def json-params (generate-string {:recipient {:id 977874788969966} :message (to_json {:id 1}})))
(def json-params (generate-string {:recipient {:id 977874788969966} :message "(to_json {:id 1})))
(def json-params (generate-string {:recipient {:id 977874788969966} :message "(to_json {:id 1})"}))
json-params
(def params { "attachment" { "type" "template" "payload" { "template_type" "generic" "elements" [{ "title" "First card" "subtitle" "Element #1 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/rift.png" "buttons" [{ "type" "web_url" "url" "https//www.messenger.com/" "title" "Web url" } { "type" "postback" "title" "Postback" "payload" "Payload for first element in a generic bubble" }] }{ "title" "Second card" "subtitle" "Element #2 of an hscroll" "image_url" "http//messengerdemo.parseapp.com/img/gearvr.png" "buttons" [{ "type" "postback" "title" "Postback" "payload" "Payload for second element in a generic bubble" }] }] } } })
(def post-url (str "https://graph.facebook.com/v2.6/me/messages?access_token="msgbot.service/page-token))
(def json-params (generate-string {:recipient {:id 977874788969966} :message params}))
json-params
(clj-http.client/post post-url {:body json-params})
(clj-http.client/post post-url {:body json-params :debug true})
json-params
(slurp (clojure.java.io/resource "x.json"))
(parse-string(slurp (clojure.java.io/resource "x.json")))
(clj-http.client/post post-url {:body (slurp (clojure.java.io/resource "x.json")) :content-type :json :debug true})
(clj-http.client/post post-url {:body (slurp (clojure.java.io/resource "x.json")) :debug true})
(slurp (clojure.java.io/resource "x.json"))
(clj-http.client/post post-url {:body (slurp (clojure.java.io/resource "x.json")) :debug true})
(clj-http.client/post post-url {:body (slurp (clojure.java.io/resource "x.json")) :content-type :json :debug true})
(clj-http.client/post post-url {:body (slurp (clojure.java.io/resource "x.json")) :debug true})
(slurp (clojure.java.io/resource "x.json"))
post-url
json-params
(def json-params (generate-string {:json {:recipient {:id 977874788969966} :message params}}))
json-
json-params
(-main)
(ns msgbot.service)
(send-generic-message 977874788969966)
(ns msgbot.service)
(use :reload-all 'msgbot.service)
(ns msgbot.service)
(-main)
(ns msgbot.server)
(-main)
(ns msgbot.service)
(send-message 977874788969966 {:image_url "https://www.donationcoder.com/Software/Mouser/urlsnooper/screenshots/Screenshot_main.gif"})
(send-message 977874788969966 {:image "https://www.donationcoder.com/Software/Mouser/urlsnooper/screenshots/Screenshot_main.gif"})
(send-message 977874788969966 {:attachment {:type "image" :payload {:url "https://www.donationcoder.com/Software/Mouser/urlsnooper/screenshots/Screenshot_main.gif"}}})
(-main)
(ns msgbot.service)
(send-message 977874788969966 {:attachment {:type "image" :payload {:url "https://www.donationcoder.com/Software/Mouser/urlsnooper/screenshots/Screenshot_main.gif"}}})
(ns msgbot.service)
(get-json-string {:object page,
          :entry [{:id 1592205911095822, :time 1460823010405,
                   :messaging [{:sender {:id 977874788969966},
                                :recipient {:id 1592205911095822},
                                :timestamp 1460823010346,
                                :message {:mid mid.1460823010339:b16edc361432313200, :seq 6, :text hi}}]}]})
(get-json-string {:object "page", :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid mid.1460823010339:b16edc361432313200, :seq 6, :text "hi"}}]}]})
{:object "page", :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid "mid.1460823010339:b16edc361432313200", :seq 6, :text "hi"}}]}]}
(get-json-string {:object "page", :entry [{:id 1592205911095822, :time 1460823010405, :messaging [{:sender {:id 977874788969966}, :recipient {:id 1592205911095822}, :timestamp 1460823010346, :message {:mid "mid.1460823010339:b16edc361432313200", :seq 6, :text "hi"}}]}]})
(send-generic-message 977874788969966)
